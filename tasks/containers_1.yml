
# Monitoring and Security Block

- name: Create Pihole container
  become_user: root
  become: true
  docker_container:
    name: "pihole"
    image: "pihole/pihole:latest"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    tls_hostname: "pihole.home"
    hostname: "pihole.home"
    ports: 
      - "{{ target_server_ip }}:53:53/tcp"
      - "{{ target_server_ip }}:53:53/udp"
      - "67:67/udp"
      - "8091:80"
    volumes:
      - '{{homedir}}/container-program-files/pihole/:/etc/pihole/'
      - '{{homedir}}/container-program-files/dnsmasq.d/:/etc/dnsmasq.d/'
      - '{{homedir}}/container-program-files/unbound.d/:/etc/unbound/'
    env: 
        TZ: "America/Toronto"
        cap_add: "NET_ADMIN"
        WEBPASSWORD: "{{ssh_pass}}"

# - name: Sleep for 30 seconds and continue with play
#   ansible.builtin.wait_for:
#     timeout: 30

- name: Create Glances SYS Monitor container
  docker_container:
    name: "glances-sys-monitor"
    image: "nicolargo/glances"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "8093:61208"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    env: 
        GLANCES_OPT: "-w"


# Web App Block
      

- name: NGINX PROXY MANAGER Container
  docker_container:
    name: "NGINX-PROXY-MANAGER"
    image: "jc21/nginx-proxy-manager:latest"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "{{ target_server_ip }}:80:80"
      - "{{ target_server_ip }}:81:81"
      - "{{ target_server_ip }}:443:443"
    volumes:
      - '{{homedir}}/container-program-files/NGINX_PROXY_MANAGER/data:/data'
      - '{{homedir}}/container-program-files/NGINX_PROXY_MANAGER/letsencrypt:/etc/letsencrypt'

- name: "Create Data container for portainer host"
  shell: "docker volume create portainer_data"

- name: Create Portainer Host
  docker_container:
    name: "portainer"
    image: "portainer/portainer-ce"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "{{ target_server_ip }}:8000:8000"
      - "{{ target_server_ip }}:8090:9000"
      - "{{ target_server_ip }}:9443:9443"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data portainer/portainer-ce'

- name: "Remount External Drive"
  become: yes
  shell: "mount /dev/sdb1 /media/pi/pi-ssd"
  ignore_errors: true
      
- name: "Provision dirs for file server"
  ignore_errors: true
  no_log: true
  shell: "mkdir /media/pi/pi-ssd/container-program-files/fileserver/ && \
          touch /media/pi/pi-ssd/container-program-files/fileserver/database.db && \
          touch /media/pi/pi-ssd/container-program-files/fileserver/filebrowser.json"
  
- name: File Server
  docker_container:
    name: "fileserver"
    image: "filebrowser/filebrowser"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "{{ target_server_ip }}:8092:80"
    volumes:
      - '/media/pi/pi-ssd/container-program-files/fileserver_share_files:/srv'
      - '/media/pi/pi-ssd/container-program-files/fileserver/database.db:/database.db'
      - '/media/pi/pi-ssd/container-program-files/plex/filebrowser.json:/filebrowser.json'
    env: 
        TZ: "America/Toronto"
        ADVERTISE_IP: "http://{{ target_server_ip }}:32400/"
        VERSION: "docker"

- name: Plex Server
  docker_container:
    name: "plex"
    image: "linuxserver/plex"
    network_mode: "host"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    volumes:
      - '{{homedir}}/container-program-files/plex/database:/config'
      - '{{homedir}}/container-program-files/plex/transcode:/transcode'
      - '/media/pi/pi-ssd/container-program-files/fileserver_share_files/plex_files:/data'
    env: 
        TZ: "America/Toronto"
        ADVERTISE_IP: "http://{{ target_server_ip }}:32400/"
        VERSION: "docker"